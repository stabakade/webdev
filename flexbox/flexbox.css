.container {
    width: 100%;
    height: 400px;
    border: 2px solid black;
    /* isko comment out karke dekhna kaise container se bahar ja raha tha pehle */
    /* initialize the container as flex */
    display: flex;

    /* flex properties for flex container */

    /* by default row hota hai */
    /* flex-direction: column;
    flex-direction: row-reverse; */

    /* flex-wrap: wrap;
    flex-wrap: wrap-reverse; */

    /* dono property ek sath set kar sakte */
    flex-flow: row-reverse wrap;

    /* to align items in center and set spaces*/
    justify-content: center;
    justify-content: space-around;
    justify-content: space-between;
    justify-content: space-evenly;
    
    /* to align vertically center */
    align-items: center;
    align-items: flex-end; /*neeche aa jayega*/
    /* align-items: flex-start; upar aa jayega */


}
.item {
    width: 100px;
    height: 100px;
    border: 2px solid black;
    border-radius: 3px solid black;
    margin: 10px;
    padding: 3px;
    background-color: rgb(149, 116, 180);
}

#item1 {
    /* higher the order, later it shows up in container */
    order: 2;

    /* gives the ability to grow when container grows */
    flex-grow: 3;
}
#item2 {
    /* use these properties on id, not class */
    flex-shrink: 2; 
      
}
#item3 {
    /* when flex-direction is set to row, flex-basis will control width; */
    /* when flex-direction is set to column, flex-basis will control height */
    flex-basis: 200px;

    /* flex shorthand */
    /* grow, shrink, basis */
    flex: 2 2 300px;

    /* item ko container ke end start ya center me place kar dega
    align-self: flex-start;
    align-self: center;
    align-self: flex-end; */

}